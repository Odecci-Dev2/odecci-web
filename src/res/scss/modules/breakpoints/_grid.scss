@use "sass:math";

// *** Flex Grid *** //

$grid-columns: 12;
$grid-gaps: (
  "0": 0,
  "1": 1rem,
  "2": 2rem,
  "3": 3rem,
  "4": 4rem,
  "5": 5rem
);
$layout-values: flex-start, flex-end, center, space-between, space-around;

// * Base Layout Classes
.odecci-container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 20px;
  box-sizing: border-box;
}
.odecci-row {
  display: flex;
  flex-flow: row wrap;
}

// * Grid Gaps
@each $key, $val in $grid-gaps {
  .odecci-gap-#{$key} > * {
    padding: $val;
  }
  .odecci-gap-#{$key} {
    margin-left: -$val;
    margin-right: -$val;
  }
}

// * Justify Content Classes
@each $val in $layout-values {
  .odecci-justify-#{$val} {
    justify-content: $val;
  }
}

// * Col Classes
@include xs {
  @for $i from 1 through $grid-columns {
    .odecci-col-#{$i}-xs {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
@include sm {
  @for $i from 1 through $grid-columns {
    .odecci-col-#{$i}-sm {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
@include md {
  @for $i from 1 through $grid-columns {
    .odecci-col-#{$i}-md {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
@include lg {
  @for $i from 1 through $grid-columns {
    .odecci-col-#{$i}-lg {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
@include xl {
  @for $i from 1 through $grid-columns {
    .odecci-col-#{$i}-xl {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}